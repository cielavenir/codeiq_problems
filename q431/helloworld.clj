#!/usr/bin/clojure
(defn one [] (count '(true)))
(defn two [] (inc (one)))
(defn x [n] (* (two) n))
(defn y [n] (+ (* (two) n) (one)))
(print (char(x(x(x(y(x(x(one)))))))))
(print (char(y(x(y(x(x(y(one)))))))))
(print (char(x(x(y(y(x(y(one)))))))))
(print (char(x(x(y(y(x(y(one)))))))))
(print (char(y(y(y(y(x(y(one)))))))))
(print (char(x(x(x(x(x(one))))))))
(print (char(y(y(y(x(y(x(one)))))))))
(print (char(y(y(y(y(x(y(one)))))))))
(print (char(x(y(x(x(y(y(one)))))))))
(print (char(x(x(y(y(x(y(one)))))))))
(print (char(x(x(y(x(x(y(one)))))))))
(print (char(x(y(x(one))))))